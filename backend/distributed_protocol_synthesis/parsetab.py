
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'NAME SEND RECEIVE LEFT_BRACE RIGHT_BRACE LEFT_PAREN RIGHT_PAREN LEFT_BRACKET RIGHT_BRACKET COMMA EQUALS FILE INCLUDE LIVENESS SAFETY PROCESS ENVIRONMENT STRONG_FAIRNESS ACCEPTING OUTPUTS INPUTS STRONG_NON_BLOCKING STATES INPUT_STATES OUTPUT_STATES PERM_STATES INPUT_ENABLEDautomata : include automata\n                | function automata\n                | definition automata\n                | instantiation automata\n                | strong_non_blocking automata\n                | include\n                | function\n                | definition\n                | instantiation\n                | strong_non_blocking\n                | errorinclude : INCLUDE FILEstrong_non_blocking : STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKETdefinition : PROCESS NAME inner\n                  | ENVIRONMENT NAME inner\n                  | LIVENESS NAME inner\n                  | SAFETY NAME innerinner : LEFT_BRACE                optional_states                optional_input_states                optional_output_states                optional_perm_states                inputs                optional_input_enabled                outputs                initial optional_accepting                edges                RIGHT_BRACE\n    inputs : INPUTS LEFT_BRACKET names RIGHT_BRACKEToptional_input_enabled : INPUT_ENABLED LEFT_BRACKET names RIGHT_BRACKEToptional_input_enabled : outputs : OUTPUTS LEFT_BRACKET names RIGHT_BRACKEToptional_states : STATES LEFT_BRACKET names RIGHT_BRACKEToptional_states : optional_input_states : INPUT_STATES LEFT_BRACKET names RIGHT_BRACKEToptional_input_states : optional_output_states : OUTPUT_STATES LEFT_BRACKET names RIGHT_BRACKEToptional_output_states : optional_perm_states : PERM_STATES LEFT_BRACKET names RIGHT_BRACKEToptional_perm_states : optional_accepting : ACCEPTING LEFT_BRACKET names RIGHT_BRACKEToptional_accepting : instantiation : NAME EQUALS NAME LEFT_PAREN names RIGHT_PARENfunction : PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner\n                | ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner\n                | LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner\n                | SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner\n    names : NAME COMMA namesnames : NAME\n             |initial : NAME NAMEedges : edge edgesedges : edge : NAME NAME SEND NAME\n            | NAME NAME RECEIVE NAMEedge : NAME NAME SEND NAME STRONG_FAIRNESS\n            | NAME NAME RECEIVE NAME STRONG_FAIRNESS'
    
_lr_action_items = {'error':([0,2,3,4,5,6,20,28,32,34,36,46,57,62,63,64,65,101,],[7,7,7,7,7,7,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'INCLUDE':([0,2,3,4,5,6,20,28,32,34,36,46,57,62,63,64,65,101,],[8,8,8,8,8,8,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'PROCESS':([0,2,3,4,5,6,20,28,32,34,36,46,57,62,63,64,65,101,],[9,9,9,9,9,9,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'ENVIRONMENT':([0,2,3,4,5,6,20,28,32,34,36,46,57,62,63,64,65,101,],[11,11,11,11,11,11,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'LIVENESS':([0,2,3,4,5,6,20,28,32,34,36,46,57,62,63,64,65,101,],[12,12,12,12,12,12,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'SAFETY':([0,2,3,4,5,6,20,28,32,34,36,46,57,62,63,64,65,101,],[13,13,13,13,13,13,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'NAME':([0,2,3,4,5,6,9,11,12,13,20,22,26,27,28,31,32,33,34,35,36,42,46,47,51,57,60,62,63,64,65,68,73,78,81,83,86,87,88,91,93,97,98,99,100,101,105,106,107,108,109,110,111,],[10,10,10,10,10,10,21,23,24,25,-12,30,38,38,-14,38,-15,38,-16,38,-17,38,-13,38,38,-34,38,-33,-35,-36,-37,38,38,38,87,38,-32,93,38,98,-41,98,103,38,-22,-18,108,109,-31,-44,-45,-46,-47,]),'STRONG_NON_BLOCKING':([0,2,3,4,5,6,20,28,32,34,36,46,57,62,63,64,65,101,],[14,14,14,14,14,14,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'$end':([1,2,3,4,5,6,7,15,16,17,18,19,20,28,32,34,36,46,57,62,63,64,65,101,],[0,-6,-7,-8,-9,-10,-11,-1,-2,-3,-4,-5,-12,-14,-15,-16,-17,-13,-34,-33,-35,-36,-37,-18,]),'FILE':([8,],[20,]),'EQUALS':([10,],[22,]),'LEFT_BRACKET':([14,41,50,59,67,72,77,82,92,],[26,51,60,68,73,78,83,88,99,]),'LEFT_PAREN':([21,23,24,25,30,],[27,31,33,35,42,]),'LEFT_BRACE':([21,23,24,25,48,53,54,55,],[29,29,29,29,29,29,29,29,]),'RIGHT_BRACKET':([26,37,38,47,51,56,60,61,68,69,73,74,78,79,83,84,88,89,94,99,104,],[-40,46,-39,-40,-40,-38,-40,70,-40,75,-40,80,-40,85,-40,90,-40,95,100,-40,107,]),'RIGHT_PAREN':([27,31,33,35,38,39,42,43,44,45,47,52,56,],[-40,-40,-40,-40,-39,48,-40,53,54,55,-40,62,-38,]),'STATES':([29,],[41,]),'INPUT_STATES':([29,40,70,],[-24,50,-23,]),'OUTPUT_STATES':([29,40,49,70,75,],[-24,-26,59,-23,-25,]),'PERM_STATES':([29,40,49,58,70,75,80,],[-24,-26,-28,67,-23,-25,-27,]),'INPUTS':([29,40,49,58,66,70,75,80,85,],[-24,-26,-28,-30,72,-23,-25,-27,-29,]),'COMMA':([38,],[47,]),'INPUT_ENABLED':([71,90,],[77,-19,]),'OUTPUTS':([71,76,90,95,],[-21,82,-19,-20,]),'ACCEPTING':([86,93,],[92,-41,]),'RIGHT_BRACE':([86,91,93,96,97,102,107,108,109,110,111,],[-32,-43,-41,101,-43,-42,-31,-44,-45,-46,-47,]),'SEND':([103,],[105,]),'RECEIVE':([103,],[106,]),'STRONG_FAIRNESS':([108,109,],[110,111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'automata':([0,2,3,4,5,6,],[1,15,16,17,18,19,]),'include':([0,2,3,4,5,6,],[2,2,2,2,2,2,]),'function':([0,2,3,4,5,6,],[3,3,3,3,3,3,]),'definition':([0,2,3,4,5,6,],[4,4,4,4,4,4,]),'instantiation':([0,2,3,4,5,6,],[5,5,5,5,5,5,]),'strong_non_blocking':([0,2,3,4,5,6,],[6,6,6,6,6,6,]),'inner':([21,23,24,25,48,53,54,55,],[28,32,34,36,57,63,64,65,]),'names':([26,27,31,33,35,42,47,51,60,68,73,78,83,88,99,],[37,39,43,44,45,52,56,61,69,74,79,84,89,94,104,]),'optional_states':([29,],[40,]),'optional_input_states':([40,],[49,]),'optional_output_states':([49,],[58,]),'optional_perm_states':([58,],[66,]),'inputs':([66,],[71,]),'optional_input_enabled':([71,],[76,]),'outputs':([76,],[81,]),'initial':([81,],[86,]),'optional_accepting':([86,],[91,]),'edges':([91,97,],[96,102,]),'edge':([91,97,],[97,97,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> automata","S'",1,None,None,None),
  ('automata -> include automata','automata',2,'p_automata','parser_1.py',140),
  ('automata -> function automata','automata',2,'p_automata','parser_1.py',141),
  ('automata -> definition automata','automata',2,'p_automata','parser_1.py',142),
  ('automata -> instantiation automata','automata',2,'p_automata','parser_1.py',143),
  ('automata -> strong_non_blocking automata','automata',2,'p_automata','parser_1.py',144),
  ('automata -> include','automata',1,'p_automata','parser_1.py',145),
  ('automata -> function','automata',1,'p_automata','parser_1.py',146),
  ('automata -> definition','automata',1,'p_automata','parser_1.py',147),
  ('automata -> instantiation','automata',1,'p_automata','parser_1.py',148),
  ('automata -> strong_non_blocking','automata',1,'p_automata','parser_1.py',149),
  ('automata -> error','automata',1,'p_automata','parser_1.py',150),
  ('include -> INCLUDE FILE','include',2,'p_include','parser_1.py',155),
  ('strong_non_blocking -> STRONG_NON_BLOCKING LEFT_BRACKET names RIGHT_BRACKET','strong_non_blocking',4,'p_strong_non_blocking','parser_1.py',175),
  ('definition -> PROCESS NAME inner','definition',3,'p_definition','parser_1.py',185),
  ('definition -> ENVIRONMENT NAME inner','definition',3,'p_definition','parser_1.py',186),
  ('definition -> LIVENESS NAME inner','definition',3,'p_definition','parser_1.py',187),
  ('definition -> SAFETY NAME inner','definition',3,'p_definition','parser_1.py',188),
  ('inner -> LEFT_BRACE optional_states optional_input_states optional_output_states optional_perm_states inputs optional_input_enabled outputs initial optional_accepting edges RIGHT_BRACE','inner',12,'p_inner','parser_1.py',262),
  ('inputs -> INPUTS LEFT_BRACKET names RIGHT_BRACKET','inputs',4,'p_inputs','parser_1.py',288),
  ('optional_input_enabled -> INPUT_ENABLED LEFT_BRACKET names RIGHT_BRACKET','optional_input_enabled',4,'p_input_enabled','parser_1.py',292),
  ('optional_input_enabled -> <empty>','optional_input_enabled',0,'p_input_enabled_empty','parser_1.py',296),
  ('outputs -> OUTPUTS LEFT_BRACKET names RIGHT_BRACKET','outputs',4,'p_outputs','parser_1.py',300),
  ('optional_states -> STATES LEFT_BRACKET names RIGHT_BRACKET','optional_states',4,'p_states','parser_1.py',304),
  ('optional_states -> <empty>','optional_states',0,'p_states_empty','parser_1.py',308),
  ('optional_input_states -> INPUT_STATES LEFT_BRACKET names RIGHT_BRACKET','optional_input_states',4,'p_input_states','parser_1.py',312),
  ('optional_input_states -> <empty>','optional_input_states',0,'p_input_states_empty','parser_1.py',316),
  ('optional_output_states -> OUTPUT_STATES LEFT_BRACKET names RIGHT_BRACKET','optional_output_states',4,'p_output_states','parser_1.py',320),
  ('optional_output_states -> <empty>','optional_output_states',0,'p_output_states_empty','parser_1.py',324),
  ('optional_perm_states -> PERM_STATES LEFT_BRACKET names RIGHT_BRACKET','optional_perm_states',4,'p_perm_states','parser_1.py',328),
  ('optional_perm_states -> <empty>','optional_perm_states',0,'p_perm_states_empty','parser_1.py',332),
  ('optional_accepting -> ACCEPTING LEFT_BRACKET names RIGHT_BRACKET','optional_accepting',4,'p_accepting','parser_1.py',336),
  ('optional_accepting -> <empty>','optional_accepting',0,'p_accepting_empty','parser_1.py',340),
  ('instantiation -> NAME EQUALS NAME LEFT_PAREN names RIGHT_PAREN','instantiation',6,'p_instantiation','parser_1.py',396),
  ('function -> PROCESS NAME LEFT_PAREN names RIGHT_PAREN inner','function',6,'p_function','parser_1.py',404),
  ('function -> ENVIRONMENT NAME LEFT_PAREN names RIGHT_PAREN inner','function',6,'p_function','parser_1.py',405),
  ('function -> LIVENESS NAME LEFT_PAREN names RIGHT_PAREN inner','function',6,'p_function','parser_1.py',406),
  ('function -> SAFETY NAME LEFT_PAREN names RIGHT_PAREN inner','function',6,'p_function','parser_1.py',407),
  ('names -> NAME COMMA names','names',3,'p_names_many','parser_1.py',412),
  ('names -> NAME','names',1,'p_names_single','parser_1.py',416),
  ('names -> <empty>','names',0,'p_names_single','parser_1.py',417),
  ('initial -> NAME NAME','initial',2,'p_initial','parser_1.py',421),
  ('edges -> edge edges','edges',2,'p_edges_many','parser_1.py',427),
  ('edges -> <empty>','edges',0,'p_edges_empty','parser_1.py',431),
  ('edge -> NAME NAME SEND NAME','edge',4,'p_edge','parser_1.py',435),
  ('edge -> NAME NAME RECEIVE NAME','edge',4,'p_edge','parser_1.py',436),
  ('edge -> NAME NAME SEND NAME STRONG_FAIRNESS','edge',5,'p_edge_with_strong_fairness','parser_1.py',440),
  ('edge -> NAME NAME RECEIVE NAME STRONG_FAIRNESS','edge',5,'p_edge_with_strong_fairness','parser_1.py',441),
]
